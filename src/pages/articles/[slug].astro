---
import { getCollection, getEntryBySlug } from 'astro:content';
import { getHeadingsFromHtml } from '@/utils/getHeadingsFromHtml';
import ArticleLayout from '@/layouts/ArticleLayout.astro';
import { categoryMap } from '@/data/categoryMap.ts';
import { tagMap } from '@/data/tagMap.ts';
import unescapeHTML from '../../utils/unescapeHTML';



const { slug } = Astro.params;
const post = await getEntryBySlug('articles', slug);
if (!post) {
  throw new Error(`Article not found: ${slug}`);
}
const content = post ? await post.render() : null;
const html = content?.html ?? post?.rendered?.html ?? '';
const { headings } = await getHeadingsFromHtml(html);



export async function getStaticPaths() {
  const posts = await getCollection('articles');
  return posts.map(post => ({
    params: { slug: post.slug }
  }));
}

const allPosts = (await getCollection('articles'))
  .filter(post => post.data.pubDate)
  .sort((a, b) => new Date(a.data.pubDate) - new Date(b.data.pubDate));

const currentIndex = allPosts.findIndex(p => p.slug === slug);
const prevPost = allPosts[currentIndex - 1];
const nextPost = allPosts[currentIndex + 1];


const categoryId = post?.data.category ?? null;
const categoryData = categoryId && categoryMap[categoryId] ? categoryMap[categoryId] : null;
const categoryLabel = categoryData?.label ?? null;
const categorySlug = categoryData?.slug ?? null;

const authorMap = {
  1: '鳥羽才一',
  2: 'Dr.wuu',
  3: 'トリ',
  4: 'ごまざら子',
};
---

<ArticleLayout
  title={post?.data.title}
  headings={headings}
  slug={slug}
  category={categoryId}
  categoryLabel={categoryLabel}
  categorySlug={categorySlug}
  tag={post?.data.tags?.[0] ?? null}
  authorLabel={authorMap[post?.data.author] ?? 'Unknown'}
  pubDate={post.data.pubDate}
>
  <!-- ✅ パンくず -->


  <!-- ✅ リード -->
  <div slot="intro" class="prose mx-auto article-page max-w-[48rem]">
    {post?.data.introImage && (
      <img src={`${import.meta.env.BASE_URL}${post.data.introImage}`} alt={`${post.data.title} のサムネイル`} width="1280" height="960" class="mx-auto mb-6 rounded shadow" loading="lazy" decoding="async" />
    )}
    {post?.data.intro && <p class="text-[#808080]">{post.data.intro}</p>}
  </div>

  <!-- ✅ 目次 -->
  <div slot="toc">
    {headings.length > 0 && (
      <section class="toc mb-6 mx-auto max-w-[42rem] text-left">
        <h2 class="text-lg font-semibold text-[#66544E] mb-2">Contents</h2>
        <ul>
          {headings.filter(h => h.depth <= 3).map(h => (
            <li class={`depth-${h.depth}`}><a href={`#${h.id}`}>{h.text}</a></li>
          ))}
        </ul>
      </section>
    )}
  </div>

  <!-- ✅ 本文 -->
  <div class="prose mx-auto article-page max-w-[48rem] mt-8" set:html={html}></div>

  <!-- ✅ 前後記事 -->
<div slot="pager" class="flex justify-between items-center gap-4 max-w-[48rem] mx-auto mt-12">
  <div class="w-full">
    {prevPost ? (
      <a href={`/articles/${prevPost.slug}`} class="border px-4 py-3 text-sm hover:bg-gray-50 block text-left">← {prevPost.data.title}</a>
    ) : (
      <div class="h-12"></div>  <!-- 高さ合わせの空白 -->
    )}
  </div>
  <div class="w-full text-right">
    {nextPost ? (
      <a href={`/articles/${nextPost.slug}`} class="border px-4 py-3 text-sm hover:bg-gray-50 block text-right">{nextPost.data.title} →</a>
    ) : (
      <div class="h-12"></div>  <!-- 高さ合わせの空白 -->
    )}
  </div>
</div>


  <!-- ✅ サイドバー -->
  <div slot="sidebar">
    <aside class="text-sm text-[#66544E] leading-relaxed space-y-4">
      <div>
        <h2 class="text-base font-bold">カテゴリー</h2>
        <p class="text-xs text-gray-400">カテゴリ一覧から記事を探す</p>
      </div>
      <ul class="divide-y divide-gray-200 border-t border-b">
        <li><a href="/category/screenwriting" class="flex items-center justify-between py-2 hover:underline"><span>脚本術・理論</span><svg class="h-4 w-4 text-[#82A0AA]" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" /></svg></a></li>
        <li><a href="/category/genre-guide" class="flex items-center justify-between py-2 hover:underline"><span>映画ジャンル別ガイド</span><svg class="h-4 w-4 text-[#82A0AA]" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" /></svg></a></li>
        <li><a href="/category/column" class="flex items-center justify-between py-2 hover:underline"><span>コラム</span><svg class="h-4 w-4 text-[#82A0AA]" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" /></svg></a></li>
      </ul>
    </aside>
    {post?.data.tags?.length > 0 && (
      <ul class="flex flex-wrap gap-2 mt-3">
        {post.data.tags.map((tag) => (
          <li><a href={`/tag/${tag}`} class="text-xs text-[#82A0AA] border border-[#82A0AA] px-2 py-1 rounded hover:bg-[#f5f5f5] transition">{tagMap[tag] ?? tag}</a></li>
        ))}
      </ul>
    )}
  </div>

</ArticleLayout>
